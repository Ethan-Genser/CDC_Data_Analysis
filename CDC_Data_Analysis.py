# Copyright 2018 Ethan Genser

# Importing packages, modules, and functions.
import xlsxwriter
from os.path import basename
from datetime import datetime

save_path = 'C:/Users/Ethans Laptop/Desktop/file.xlsx'
years = range(2008,2017)
data_base_name = 'Cause_of_Death_'

def main():
    sheets = 0
    restart = True
    timestamp = datetime.now()
    print_copyright()
    workbook = xlsxwriter.Workbook(save_path)
    raw_data = []
    causes = []
    deaths = []

    for year in years:
        raw_data.append(open(str(data_base_name) + str(year) + '.txt', 'r').readlines())

    # Reads and collects data from the file.
    print('\nCollecting data...\n')
    for i in range(0, len(years)):
        causes.append(get_causes(raw_data[i]))
        deaths.append(get_deaths(raw_data[i]))

    # Opens a new worksheet. 
    worksheet = workbook.add_worksheet()
    worksheet = record_data(workbook, worksheet, causes, deaths)

    # Saves finished workbook
    workbook.close()

def get_causes(raw_data:list)->list:
    causes = list()
    cause = ''
    rec = False
    line_number = 0

    # Iterates through each line of the file.
    for line in raw_data:
        line_number += 1
        cause = ''
        # Skips the first line.
        if line_number < 2:
            continue
        # Stops reading when the dividor is reached.
        if line == '\"---\"\n':
            break

        # Iterates through each character in the line.
        for char in line:
            # Stops recording characters when the stop symbol is reached.
            if char == '(':
                rec = False
            # Records characters.
            if rec:
                cause = cause + char
            # Starts recording characters when the start symbol is reached.
            if char == '#':
                rec = True

        # Formats and appends the cause to the list of causes.
        cause = cause.strip()
        causes.append(cause)

    return causes

def get_deaths(raw_data:list)->list:
    deaths = list()
    total = ''
    tabs = 0
    rec = False
    line_number = 0

        # Iterates through each line of the file.
    for line in raw_data:
        line_number += 1
        total = ''
        tabs = 0
        # Skips the first line.
        if line_number < 2:
            continue
        # Stops reading when the dividor is reached.
        if line == '\"---\"\n':
            break

        # Iterates through each character in the line.
        for char in line:
            # Counts the number of tabs since the beginning of the line.
            if char == '\t':
                tabs += 1
            # Starts recording characters when the second tab is reached.
            if tabs > 2:
                rec = True
            # Stops recording characters when the third tab is reached.
            if tabs > 3:
                rec = False
            # Records characters.
            if rec:
                total = total + char

        # Formats and appends the total to the list of death totals.
        total = int(total.strip())
        deaths.append(total)

    return deaths

def format_sheet(sheet:xlsxwriter.worksheet, timestamp:datetime, raw_data:list)->xlsxwriter.worksheet:

    def get_time(raw_data:list)->str:
            time = ''
            rec = False

            # Iterates through each line of the file.
            for line in raw_data:

                if 'Year/Month' in line:
                    # Iterates through each character in the line.
                    for char in line:
                        # Stops recording characters when the stop symbol is reached.
                        if char == '\"':
                            rec = False
                        # Records characters.
                        if rec:
                            time = time + char
                        # Starts recording characters when the start symbol is reached.
                        if char == ':':
                            rec = True

                    # Formats the string
                    time = time.strip()
                    break

            return time

    sheet.write(0,3,'Spreadsheet generated by ' + basename(__file__) + " on " + str(timestamp.month) + '/' + str(timestamp.day) + '/' + str(timestamp.year) + ' @ ' + str(timestamp.hour) + ':' + str(timestamp.minute) + ':' + str(timestamp.second))
    sheet.write(2,3,'Dataset provided by the Center for Disease Control and Prevention (https://wonder.cdc.gov/)')
    sheet.write(0,0,'Cause of Death')
    sheet.write(0,1,'Total Fatalities (' + get_time(raw_data) + ')')
    return sheet

def record_data(workbook:xlsxwriter.workbook, worksheet:xlsxwriter.worksheet, causes:list, deaths:list)->xlsxwriter.worksheet:

    chart = workbook.add_chart({'type': 'column'})
    chart.set_y_axis({'name': 'Fatalities'})
    chart.set_x_axis({'name': 'Cause of Death'})
    chart.set_title({'name': '15 Leading Causes of Death in America'})

    for i in range(0, len(causes)):
        test = len(causes[i])
        worksheet.write_column(*[i * (len(causes[i]) + 1), 0], data=causes[i])

    for i in range(0, len(deaths)):
        worksheet.write_column(*[i * (len(deaths[i]) + 1), 1], data=deaths[i])

    for year in years:
        top = ((year - years[0]) * (len(causes[0]) + 1)) + 1
        bottom = ((year - years[0]) * (len(causes[0]) + 1)) + len(causes[0])
        test = '=Sheet1!$A$' +  str(top) + ':$A$' + str(bottom)
        chart.add_series({
        'categories': '=Sheet1!$A$' +  str(top) + ':$A$' + str(bottom),
        'values': '=Sheet1!$B$' +  str(top) + ':$B$' + str(bottom),
        'name': str(year),
        })
    worksheet.insert_chart('D1', chart)

def print_copyright():
    print('**********************************************')
    print('* ' + basename(__file__) + ' (c) Ethan Genser 2018 *')
    print('**********************************************')

if __name__=='__main__':main()